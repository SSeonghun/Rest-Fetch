안녕하십니까 발표를 맡은 9조 구조대 발표자 이종하입니다.
저희는 침대 밑을 지키는 REST FETCH 주제로 발표 시작하겠습니다.
먼저 목차입니다. 아이디어, 제안, 프로세스, 시연, 아키텍처, 기술스택, 구현 순으로 진행하겠습니다.
UCC 먼저 보겠습니다.
UCC 재밌게 보셨나요?
다음은 아이디어 및 제안입니다.
저희 팀은 침대 밑에 떨어진 물건을 어떻게 효율적으로 뺄 수 있을까란 생각에서 시작되었습니다.
이를 구현하기 위해 옵저버는 ESP322CAM을 사용하여 DB에 사진을 저장하고,
APP은 서버에서 받은 사진을 확인하여 Fethcer에게 명령을 내릴 수 있습니다.
Fetcher는 이 명령을 수행하여 떨어진 물건을 줍습니다.
이제 시연해보겠습니다.
먼저 카메라에서 물건이 떨어졌음을 감지하고 서버로 데이터를 전송합니다.
이를 사용자가 확인하고 Fetcher에게 명령을 내립니다.
특화 프로젝트 특성상 물건을 갖고오는 시연은 유니티에서 보여드리겠습니다.
Fetcher는 라이다로 작성한 SLAM을 통해 주행 경로를 계획합니다.
연산이 완료되면 Fetcher는 최적의 경로로 물건을 갖고 옵니다.
물건을 갖고오면 앱에 회수 완료라는 표시를 확인할 수 있습니다.
다음은 라이다로 SLAM을 작성하는 영상을 보여드리겠습니다.
3D 가상환경 특성상 고급 그래픽으로 인해 성능 저하가 있어 영상으로 대체했습니다.
다음은 실제 하드웨어 구현 영상입니다. 제공받은 하드웨어가 없어 기존에 갖고 있던 RC Car로 간단하게 구현한 영상입니다.
이상으로 시연 마치겠습니다.
다음은 기술스택 및 아키텍처입니다.
저희가 사용한 기술스택이고, 아키텍처는 이렇게 구상하였습니다.
다음은 구현입니다.
먼저 옵저버는 10분마다 사진을 DB로 전송합니다.
다음은 Fetcher입니다.
폴링 방식으로 http request 보내면서 데이터베이스의 명령테이블 조회후 Fetcher에 해당되는 명령이 있으면 수행합니다.
L293D IC칩을 사용하여 DC모터를 양방향으로 제어할 수 있도록 하였습니다.
다음은 경로탐색 알고리즘입니다.
현재 이미지는 A* 알고리즘을 이미지화한 사진입니다.
주변을 우선순위 큐에 담아 탐색하면서 목적지에 도달할 때까지 탐색하는 알고리즘입니다.
초록색으로 표시된 칸은 A*알고리즘이 훑고 간 것을 나타냅니다.
다음은 D* 알고리즘입니다.
목적지부터 탐색을 시작하여 모든 배열에 대해 이동 방향을 결정해주는 알고리즘입니다.
만약 경로를 통해 이동하다가 새로운 장애물이 생겼다면 어떻게 될까요?
다음 이미지를 보시면 D*알고리즘의 장점을 확인할 수 있습니다. 전역 경로계획을 기반으로 지역경로 계획을 세울 수 있습니다.
연두색 화살표는 지역경로 계획으로 경로가 다시 계획된 것을 확인할 수 있습니다.
다음은 퀴즈입니다.
A*알고리즘과 D*알고리즘 중 무엇이 더 빠를까요?
정답은 A*알고리즘입니다.
그렇다면 저희는 D*알고리즘을 사용했는데 왜 사용했을까요?
바로 지역경로계획에 용이하다는 것입니다.
집안은 새로운 장애물로 인해 맵의 변동성이 잦으므로 D*알고리즘을 활용하였습니다.
다음은 APP입니다.
App UI는 JetpackCompose와 GoogleMaterial3 디자인 시스템에 기반하여 구현했습니다.
App 구현은 MVI 패턴을 기본으로 채택했습니다.
해당 패턴은 Model 의 상태 변화에 따라 UI가 재구성되고 단방향 구조로 이루어져있습니다.
이로써 쓰레드의 안전성이 높다는 장점이 있습니다.
다음은 백엔드입니다. 양방향 통신이 아닌 SSE 통신을 이용하여 서버의 부담을 줄였습니다.
다음은 팀원 소개입니다. 저희 팀은 여현대 팀장을 중심으로 이종하, 주현민, 오혜성, 김민아, 임성훈으로 이루어져 있습니다.
질문 있으시면 질문 해주시면 감사하겠습니다.